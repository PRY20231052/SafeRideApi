from rest_framework import serializers
from api.models.location import Location
from api.models.route import Route
from api.serializers.path_serializer import PathSerializer
from api.serializers.location_serializer import LocationSerializer

class RouteSerializer(serializers.Serializer):
    # Required data
    origin = LocationSerializer()
    waypoints = LocationSerializer(many=True)

    # Not required data (will be generated by the model)
    departure_time = serializers.DateTimeField(required=False)
    option1 = PathSerializer(many=True, required=False)
    option2 = PathSerializer(many=True, required=False)
    option3 = PathSerializer(many=True, required=False)
    paths_geojson = serializers.DictField(required=False)
    
    # Creates a Route instance given a route json object
    def create(self, data):
        return Route(
            origin=LocationSerializer().create(data.pop('origin')),
            waypoints=[
                LocationSerializer().create(waypoint_data) for waypoint_data in data.pop('waypoints')
            ]
        )